[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ml-agents"
version = "0.1.0"
description = "ML Agents Reasoning Research Platform - Cohere Labs Open Science Initiative"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Cohere Labs Community", email = "community@cohere.com"},
]
keywords = ["machine-learning", "reasoning", "ai", "research", "benchmarking"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "transformers>=4.35.0",
    "accelerate>=0.24.0",
    "bitsandbytes>=0.41.0",
    "openai>=1.3.0",
    "cohere>=4.37.0",
    "anthropic>=0.8.0",
    "pandas>=2.1.0",
    "datasets>=2.14.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.66.0",
    "huggingface_hub>=0.19.0",
    "pyyaml>=6.0.1",
    "torch>=2.1.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "instructor>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.4.0",
]
jupyter = [
    "ipywidgets>=8.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
all = [
    "ml-agents[dev,jupyter]",
]

[project.urls]
Homepage = "https://github.com/thompsonson/ml-agents"
Repository = "https://github.com/thompsonson/ml-agents"
Documentation = "https://github.com/thompsonson/ml-agents/blob/main/README.md"
Issues = "https://github.com/thompsonson/ml-agents/issues"

[project.scripts]
ml-agents = "src.cli.main:app"
ml-agents-cli = "src.cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "accelerate.*",
    "bitsandbytes.*",
    "datasets.*",
    "huggingface_hub.*",
    "torch.*",
    "cohere.*",
    "anthropic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "-v",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
